SUCCESS/SUCCESS ---------------------- ok: test_c1.dat time: 0.0104101 int vars: 4
SUCCESS/SUCCESS ---------------------- ok: test_c1.dat time: 0.0127041 int vars: 4
                ---------------------- int vars: 4
SUCCESS/SUCCESS ---------------------- ok: test_c1.dat time: 0.0108869 int vars: 4
                ---------------------- int vars: 4
                ---------------------- z: // solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,20000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1];
w = [[0 0 0 0 0]
             [0 1 1 1 1]];
e = [0 5];
s = [0 2];

SUCCESS/SUCCESS ---------------------- ok: test_c1.dat time: 0.0153739 int vars: 4
                ---------------------- int vars: 4
                ---------------------- sol: // solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,20000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1];
w = [[0 0 0 0 0]
             [0 1 1 1 1]];
e = [0 5];
s = [0 2];

                ---------------------- data: // RANGE_INT H [1 ,5]
// RANGE_INT N [1 ,2]

SUCCESS/SUCCESS ---------------------- ok: test_c1.dat time: 0.0125661 int vars: 4
                ---------------------- int vars: 4
                ---------------------- sol: // solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,20000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1];
w = [[0 0 0 0 0]
             [0 1 1 1 1]];
e = [0 5];
s = [0 2];

                ---------------------- data: numNurses = 2;
hours = 5;
demand = [0 1 1 1 1];
minHours = 3;
maxHours = 5;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c1.dat time: 0.0128479 int vars: 4
                ---------------------- int vars: 4
                ---------------------- sol: // solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,20000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1];
w = [[0 0 0 0 0]
             [0 1 1 1 1]];
e = [0 5];
s = [0 2];

                ---------------------- data: numNurses = 2;
hours = 5;
demand = [0 1 1 1 1];
minHours = 3;
maxHours = 5;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c2.dat time: 0.0323849 int vars: 4
                ---------------------- int vars: 4
                ---------------------- sol: // solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            7,00000e+00  3,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0];
w = [[1 1 1 0 0]
             [0 0 0 0 0]];
e = [3 0];
s = [0 0];

                ---------------------- data: numNurses = 2;
hours = 5;
demand = [0 1 0 0 0];
minHours = 3;
maxHours = 5;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c3.dat time: 0.082418 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,30000e+01  4,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1 0];
w = [[0 1 0 0 0]
             [0 0 1 1 0]
             [0 0 0 0 0]];
e = [3 4 0];
s = [0 1 0];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [0 1 1 1 0];
minHours = 1;
maxHours = 2;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c4.dat time: 0.0324538 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,60000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1 1];
w = [[0 0 0 0 0]
             [0 0 1 1 1]
             [0 1 0 0 0]];
e = [0 5 2];
s = [0 2 1];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [0 1 1 1 1];
minHours = 1;
maxHours = 4;
maxConsec = 3;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c5.dat time: 0.0175741 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,30000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0 1];
w = [[1 0 0 0 0]
             [0 0 0 0 0]
             [0 0 1 0 1]];
e = [1 0 5];
s = [0 0 2];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [1 0 1 0 1];
minHours = 1;
maxHours = 5;
maxConsec = 3;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c6.dat time: 0.0529749 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,00000e+01  4,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0 1];
w = [[0 0 0 1 0]
             [0 0 0 0 0]
             [1 0 0 0 0]];
e = [4 0 1];
s = [1 0 0];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [1 0 0 1 0];
minHours = 1;
maxHours = 2;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c1.dat time: 0.014693 int vars: 4
                ---------------------- int vars: 4
                ---------------------- sol: // solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,20000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1];
w = [[0 0 0 0 0]
             [0 1 1 1 1]];
e = [0 5];
s = [0 2];

                ---------------------- data: numNurses = 2;
hours = 5;
demand = [0 1 1 1 1];
minHours = 3;
maxHours = 5;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c2.dat time: 0.020586 int vars: 4
                ---------------------- int vars: 4
                ---------------------- sol: // solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            7,00000e+00  3,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0];
w = [[1 1 1 0 0]
             [0 0 0 0 0]];
e = [3 0];
s = [0 0];

                ---------------------- data: numNurses = 2;
hours = 5;
demand = [0 1 0 0 0];
minHours = 3;
maxHours = 5;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c3.dat time: 0.0236919 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,30000e+01  4,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1 0];
w = [[0 1 0 0 0]
             [0 0 1 1 0]
             [0 0 0 0 0]];
e = [3 4 0];
s = [0 1 0];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [0 1 1 1 0];
minHours = 1;
maxHours = 2;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c4.dat time: 0.034744 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,60000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1 1];
w = [[0 0 0 0 0]
             [0 0 1 1 1]
             [0 1 0 0 0]];
e = [0 5 2];
s = [0 2 1];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [0 1 1 1 1];
minHours = 1;
maxHours = 4;
maxConsec = 3;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c5.dat time: 0.014688 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,30000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0 1];
w = [[1 0 0 0 0]
             [0 0 0 0 0]
             [0 0 1 0 1]];
e = [1 0 5];
s = [0 0 2];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [1 0 1 0 1];
minHours = 1;
maxHours = 5;
maxConsec = 3;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c6.dat time: 0.026197 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,00000e+01  4,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0 1];
w = [[0 0 0 1 0]
             [0 0 0 0 0]
             [1 0 0 0 0]];
e = [4 0 1];
s = [1 0 0];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [1 0 0 1 0];
minHours = 1;
maxHours = 2;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c1.dat time: 0.0297179 int vars: 4
                ---------------------- int vars: 4
                ---------------------- sol: // solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,20000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1];
w = [[0 0 0 0 0]
             [0 1 1 1 1]];
e = [0 5];
s = [0 2];

                ---------------------- data: numNurses = 2;
hours = 5;
demand = [0 1 1 1 1];
minHours = 3;
maxHours = 5;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c2.dat time: 0.0508549 int vars: 4
                ---------------------- int vars: 4
                ---------------------- sol: // solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            7,00000e+00  3,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0];
w = [[1 1 1 0 0]
             [0 0 0 0 0]];
e = [3 0];
s = [0 0];

                ---------------------- data: numNurses = 2;
hours = 5;
demand = [0 1 0 0 0];
minHours = 3;
maxHours = 5;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c3.dat time: 0.0318229 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,30000e+01  4,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1 0];
w = [[0 1 0 0 0]
             [0 0 1 1 0]
             [0 0 0 0 0]];
e = [3 4 0];
s = [0 1 0];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [0 1 1 1 0];
minHours = 1;
maxHours = 2;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c4.dat time: 0.037179 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,60000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1 1];
w = [[0 0 0 0 0]
             [0 0 1 1 1]
             [0 1 0 0 0]];
e = [0 5 2];
s = [0 2 1];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [0 1 1 1 1];
minHours = 1;
maxHours = 4;
maxConsec = 3;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c5.dat time: 0.0180659 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,30000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0 1];
w = [[1 0 0 0 0]
             [0 0 0 0 0]
             [0 0 1 0 1]];
e = [1 0 5];
s = [0 0 2];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [1 0 1 0 1];
minHours = 1;
maxHours = 5;
maxConsec = 3;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: test_c6.dat time: 0.048275 int vars: 6
                ---------------------- int vars: 6
                ---------------------- sol: // solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,00000e+01  4,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0 1];
w = [[0 0 0 1 0]
             [0 0 0 0 0]
             [1 0 0 0 0]];
e = [4 0 1];
s = [1 0 0];

                ---------------------- data: numNurses = 3;
hours = 5;
demand = [1 0 0 1 0];
minHours = 1;
maxHours = 2;
maxConsec = 4;
maxPresence = 4;

SUCCESS/SUCCESS ---------------------- ok: x_16_0.dat time: 2.00853 int vars: 84
                ---------------------- int vars: 84
                ---------------------- sol: // solution (optimal) with objective 18
// Quality Incumbent solution:
// MILP objective                                 1,8000000000e+01
// MILP solution norm |x| (Total, Max)            4,47000e+02  1,60000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 1 0 0 1 1 0 0 0
         0 0 1 1 0 0 0 0];
w = [[0 0 1 1 0 1 0 1 0 1 0 0 0 0 0 0]
             [0 0 0 1 0 1 1 0 1 1 0 1 0 1 0 0]
             [0 0 1 1 0 1 1 0 1 0 1 0 1 0 0 0]
             [0 0 1 1 0 1 0 1 1 0 1 1 0 0 0 0]
             [0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0]
             [0 0 1 1 0 1 0 1 0 1 0 1 0 0 0 0]
             [0 0 1 1 0 1 0 1 0 1 1 0 0 0 0 0]
             [0 1 1 0 1 1 0 1 0 1 0 1 0 0 0 0]
             [0 0 0 1 1 0 1 0 1 0 1 1 0 1 0 0]
             [0 0 1 1 0 1 1 0 1 0 1 1 0 0 0 0]
             [0 0 0 0 0 0 1 1 0 1 0 1 0 1 0 1]
             [0 1 1 0 1 1 0 1 0 1 1 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 1 0 1 0 1 0 1 0 1 0 1]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 1 1 0 1 1 0 1 1 0 1 1 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 1 1 0 1 1 0 1 1 0]
             [0 0 0 1 1 0 1 0 1 1 0 1 0 1 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 1 0 1 1 0 1 1 0 1 1 0]
             [0 0 0 0 0 0 1 1 0 1 1 0 1 1 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [10 14 13 12 14 13 13 12 14 13 16 11 0 0 0 0 0 0 0 0 16 0 0 0 0 0 15 0 0
         15 14 0 0 0 0 0 16 14 0 0 0 0];
s = [0 4 3 2 4 3 3 2 4 3 6 1 0 0 0 0 0 0 0 0 6 0 0 0 0 0 5 0 0 5 4 0 0 0 0 0
         6 4 0 0 0 0];

                ---------------------- data: numNurses = 42;
hours = 16;
demand = [0 2 8 10 0 5 5 8 1 5 3 8 2 10 3 2];
minHours = 5;
maxHours = 8;
maxConsec = 2;
maxPresence = 11;

