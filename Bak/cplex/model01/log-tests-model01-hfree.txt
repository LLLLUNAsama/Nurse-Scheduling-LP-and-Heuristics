SUCCESS/SUCCESS ---------------------- ok: test_c1.dat time: 0.0130589 int vars: 4
                --- int vars: 4
                --- Gap: 0
                --- Obj Func: 1
                --- MIP?: true
                --- data: 
nNurses = 2;
hours = 5;
demand = [0 1 1 1 1];
minHours = 3;
maxHours = 5;
maxConsec = 4;
maxPresence = 4;
desiredZ = [1 0];

                --- sol: 
// solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,20000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1];
w = [[0 0 0 0 0]
             [0 1 1 1 1]];
e = [0 5];
s = [0 2];

SUCCESS/SUCCESS ---------------------- ok: test_c2.dat time: 0.0184779 int vars: 4
                --- int vars: 4
                --- Gap: 0
                --- Obj Func: 1
                --- MIP?: true
                --- data: 
nNurses = 2;
hours = 5;
demand = [0 1 0 0 0];
minHours = 3;
maxHours = 5;
maxConsec = 4;
maxPresence = 4;
desiredZ = [1 0];

                --- sol: 
// solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            7,00000e+00  3,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0];
w = [[1 1 1 0 0]
             [0 0 0 0 0]];
e = [3 0];
s = [0 0];

SUCCESS/SUCCESS ---------------------- ok: test_c3.dat time: 0.025363 int vars: 6
                --- int vars: 6
                --- Gap: 0
                --- Obj Func: 2
                --- MIP?: true
                --- data: 
nNurses = 3;
hours = 5;
demand = [0 1 1 1 0];
minHours = 1;
maxHours = 2;
maxConsec = 4;
maxPresence = 4;
desiredZ = [1 1 0];

                --- sol: 
// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,30000e+01  4,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1 0];
w = [[0 1 0 0 0]
             [0 0 1 1 0]
             [0 0 0 0 0]];
e = [3 4 0];
s = [0 1 0];

SUCCESS/SUCCESS ---------------------- ok: test_c4.dat time: 0.03023 int vars: 6
                --- int vars: 6
                --- Gap: 0
                --- Obj Func: 2
                --- MIP?: true
                --- data: 
nNurses = 3;
hours = 5;
demand = [0 1 1 1 1];
minHours = 1;
maxHours = 4;
maxConsec = 3;
maxPresence = 4;
desiredZ = [1 1 0];

                --- sol: 
// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,60000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1 1];
w = [[0 0 0 0 0]
             [0 0 1 1 1]
             [0 1 0 0 0]];
e = [0 5 2];
s = [0 2 1];

SUCCESS/SUCCESS ---------------------- ok: test_c5.dat time: 0.0210831 int vars: 6
                --- int vars: 6
                --- Gap: 0
                --- Obj Func: 2
                --- MIP?: true
                --- data: 
nNurses = 3;
hours = 5;
demand = [1 0 1 0 1];
minHours = 1;
maxHours = 5;
maxConsec = 3;
maxPresence = 4;
desiredZ = [1 1 0];

                --- sol: 
// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,30000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0 1];
w = [[1 0 0 0 0]
             [0 0 0 0 0]
             [0 0 1 0 1]];
e = [1 0 5];
s = [0 0 2];

SUCCESS/SUCCESS ---------------------- ok: test_c5_b.dat time: 0.019803 int vars: 6
                --- int vars: 6
                --- Gap: 0
                --- Obj Func: 1
                --- MIP?: true
                --- data: 
nNurses = 3;
hours = 5;
demand = [1 0 1 0 1];
minHours = 1;
maxHours = 5;
maxConsec = 3;
maxPresence = 5;
desiredZ = [1 0 0];

                --- sol: 
// solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,00000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         0 1];
w = [[0 0 0 0 0]
             [0 0 0 0 0]
             [1 0 1 0 1]];
e = [0 0 5];
s = [0 0 1];

SUCCESS/SUCCESS ---------------------- ok: test_c6.dat time: 0.023608 int vars: 6
                --- int vars: 6
                --- Gap: 0
                --- Obj Func: 2
                --- MIP?: true
                --- data: 
nNurses = 3;
hours = 5;
demand = [1 0 0 1 0];
minHours = 1;
maxHours = 2;
maxConsec = 4;
maxPresence = 4;
desiredZ = [1 1 0];

                --- sol: 
// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,00000e+01  4,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0 1];
w = [[0 0 0 1 0]
             [0 0 0 0 0]
             [1 0 0 0 0]];
e = [4 0 1];
s = [1 0 0];

FAIL/FAIL       ---------------------- ok: test_basicTest-maxConsec01.dat
                --- data: 
nNurses = 1;
minHours = 1;
maxHours = 24;
maxConsec = 4;
maxPresence = 24;
hours = 24;
demand = [1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
desiredZ = [-1];

SUCCESS/SUCCESS ---------------------- ok: test_basicTest-maxConsec02.dat time: 0.001858 int vars: 2
                --- int vars: 2
                --- Gap: 0
                --- Obj Func: 1
                --- MIP?: true
                --- data: 
nNurses = 1;
minHours = 1;
maxHours = 24;
maxConsec = 4;
maxPresence = 24;
hours = 24;
demand = [1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0];
desiredZ = [1];

                --- sol: 
// solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            3,80000e+01  2,40000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1];
w = [[1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0]];
e = [24];
s = [1];

SUCCESS/SUCCESS ---------------------- ok: test_basicTest-maxHours_2.dat time: 0.02052 int vars: 6
                --- int vars: 6
                --- Gap: 0
                --- Obj Func: 2
                --- MIP?: true
                --- data: 
nNurses = 3;
hours = 24;
demand = [0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
minHours = 1;
maxHours = 2;
maxConsec = 4;
maxPresence = 4;
desiredZ = [1 1 0];

                --- sol: 
// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,80000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [0
         1 1];
w = [[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [0 5 4];
s = [0 2 1];

SUCCESS/SUCCESS ---------------------- ok: test_basicTest-maxHours_3.dat time: 0.0112941 int vars: 4
                --- int vars: 4
                --- Gap: 0
                --- Obj Func: 2
                --- MIP?: true
                --- data: 
nNurses = 2;
hours = 24;
demand = [0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
minHours = 1;
maxHours = 3;
maxConsec = 4;
maxPresence = 3;
desiredZ = [1 1];

                --- sol: 
// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            2,40000e+01  7,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1];
w = [[0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [7 4];
s = [5 2];

SUCCESS/SUCCESS ---------------------- ok: test_basicTest-maxHours_4.dat time: 0.036001 int vars: 6
                --- int vars: 6
                --- Gap: 0
                --- Obj Func: 2
                --- MIP?: true
                --- data: 
nNurses = 3;
hours = 24;
demand = [0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
minHours = 1;
maxHours = 4;
maxConsec = 4;
maxPresence = 3;
desiredZ = [1 1 0];

                --- sol: 
// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,60000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0 1];
w = [[0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [5 0 2];
s = [3 0 0];

SUCCESS/SUCCESS ---------------------- ok: test_basicTest-maxHours_5.dat time: 0.0217988 int vars: 4
                --- int vars: 4
                --- Gap: 0
                --- Obj Func: 1
                --- MIP?: true
                --- data: 
nNurses = 2;
hours = 24;
demand = [0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
minHours = 3;
maxHours = 5;
maxConsec = 4;
maxPresence = 4;
desiredZ = [1 0];

                --- sol: 
// solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,20000e+01  5,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         0];
w = [[0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [5 0];
s = [2 0];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-maxHours01.dat objfunc=UNSOLVED != 1
                --- data: 
nNurses = 1;
minHours = 1;
maxHours = 4;
maxConsec = 24;
maxPresence = 24;
hours = 24;
demand = [1 1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
desiredZ = [1];

SUCCESS/SUCCESS ---------------------- ok: test_basicTest-maxHours02.dat time: 0.0152931 int vars: 2
                --- int vars: 2
                --- Gap: 0
                --- Obj Func: 1
                --- MIP?: true
                --- data: 
nNurses = 1;
minHours = 1;
maxHours = 4;
maxConsec = 24;
maxPresence = 24;
hours = 24;
demand = [1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
desiredZ = [1];

                --- sol: 
// solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,00000e+01  4,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1];
w = [[1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [4];
s = [1];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-maxPresence01.dat objfunc=UNSOLVED != 1
                --- data: 
nNurses = 1;
minHours = 1;
maxHours = 24;
maxConsec = 24;
maxPresence = 4;
hours = 24;
demand = [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
desiredZ = [1];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-maxPresence02.dat objfunc=2 != 1
                --- int vars: 4
                --- Gap: 0
                --- Obj Func: 2
                --- MIP?: true
                --- data: 
nNurses = 2;
minHours = 1;
maxHours = 24;
maxConsec = 24;
maxPresence = 4;
hours = 24;
demand = [1 0 0 2 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
desiredZ = [1 1];

                --- sol: 
// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            2,60000e+01  7,00000e+00
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1];
w = [[1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [4 7];
s = [1 4];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-maxPresence03.dat objfunc=UNSOLVED != 1
                --- data: 
nNurses = 1;
minHours = 1;
maxHours = 24;
maxConsec = 24;
maxPresence = 4;
hours = 24;
demand = [1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
desiredZ = [1];

SUCCESS/SUCCESS ---------------------- ok: test_basicTest-maxRest01.dat time: 0.00314403 int vars: 2
                --- int vars: 2
                --- Gap: 0
                --- Obj Func: 1
                --- MIP?: true
                --- data: 
nNurses = 1;
minHours = 1;
maxHours = 24;
maxConsec = 24;
maxPresence = 24;
hours = 24;
demand = [1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
desiredZ = [1];

                --- sol: 
// solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            3,10000e+01  2,40000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1];
w = [[1 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [24];
s = [1];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-maxRest02.dat objfunc=2 != 1
                --- int vars: 4
                --- Gap: 0
                --- Obj Func: 2
                --- MIP?: true
                --- data: 
nNurses = 2;
minHours = 1;
maxHours = 24;
maxConsec = 24;
maxPresence = 12;
hours = 24;
demand = [1 1 0 1 1 1 0 1 1 0 0 1 0 1 1 1 0 0 0 1 1 0 1 1];
desiredZ = [1 0];

                --- sol: 
// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            7,00000e+01  2,40000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1];
w = [[1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 1 1 0 1 1]];
e = [12 24];
s = [1 14];

SUCCESS/SUCCESS ---------------------- ok: test_basicTest-maxRest03.dat time: 0.0018611 int vars: 2
                --- int vars: 2
                --- Gap: 0
                --- Obj Func: 1
                --- MIP?: true
                --- data: 
nNurses = 1;
minHours = 1;
maxHours = 24;
maxConsec = 24;
maxPresence = 24;
hours = 24;
demand = [1 1 0 1 1 1 0 1 1 0 0 1 0 1 1 1 0 0 0 1 1 0 1 1];
desiredZ = [1];

                --- sol: 
// solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            4,40000e+01  2,40000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1];
w = [[1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 0 1 1]];
e = [24];
s = [1];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-maxRest04.dat objfunc=4 != 1
                --- int vars: 8
                --- Gap: 0
                --- Obj Func: 4
                --- MIP?: true
                --- data: 
nNurses = 4;
minHours = 1;
maxHours = 24;
maxConsec = 4;
maxPresence = 8;
hours = 24;
desiredZ = [1 1 1 1];
demand = [1 1 0 1 1 1 0 1 2 0 0 1 0 1 2 2 0 0 0 1 1 0 1 1];

                --- sol: 
// solution (optimal) with objective 4
// Quality Incumbent solution:
// MILP objective                                 4,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,29000e+02  2,40000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1 1 1];
w = [[0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 1 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 1 0 0 0 0 0 0 0 0]
             [1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1]];
e = [16 16 8 24];
s = [9 9 1 20];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-maxRest05.dat objfunc=3 != 1
                --- int vars: 8
                --- Gap: 0
                --- Obj Func: 3
                --- MIP?: true
                --- data: 
nNurses = 4;
minHours = 1;
maxHours = 24;
maxConsec = 4;
maxPresence = 8;
hours = 24;
desiredZ = [1 1 1 1];
demand = [1 1 0 1 1 1 0 1 1 0 0 1 0 1 1 1 0 0 0 1 1 0 1 1];

                --- sol: 
// solution (optimal) with objective 3
// Quality Incumbent solution:
// MILP objective                                 3,0000000000e+00
// MILP solution norm |x| (Total, Max)            9,70000e+01  2,40000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1 0 1];
w = [[0 0 0 0 0 0 0 0 1 1 0 1 0 1 1 1 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [16 24 0 8];
s = [9 20 0 1];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-maxRest06.dat objfunc=2 != 1
                --- int vars: 4
                --- Gap: 0
                --- Obj Func: 2
                --- MIP?: true
                --- data: 
nNurses = 2;
minHours = 1;
maxHours = 4;
maxConsec = 24;
maxPresence = 5;
hours = 24;
demand = [1 1 0 0 1 0 0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0];
desiredZ = [1 1];

                --- sol: 
// solution (optimal) with objective 2
// Quality Incumbent solution:
// MILP objective                                 2,0000000000e+00
// MILP solution norm |x| (Total, Max)            4,00000e+01  1,40000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1];
w = [[1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0]];
e = [5 14];
s = [1 10];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-minHours01.dat objfunc=1 != 0
                --- int vars: 2
                --- Gap: 0
                --- Obj Func: 1
                --- MIP?: true
                --- data: 
nNurses = 1;
minHours = 2;
maxHours = 24;
maxConsec = 24;
maxPresence = 24;
hours = 24;
demand = [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
desiredZ = [1];

                --- sol: 
// solution (optimal) with objective 1
// Quality Incumbent solution:
// MILP objective                                 1,0000000000e+00
// MILP solution norm |x| (Total, Max)            4,60000e+01  2,40000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1];
w = [[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0]];
e = [24];
s = [1];

FAIL/FAIL       ---------------------- ok: test_basicTest-minHours02.dat
                --- data: 
nNurses = 1;
minHours = 24;
maxHours = 4;
maxConsec = 24;
maxPresence = 24;
hours = 24;
desiredZ = [-1];
demand = [1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-manual-solution01.dat objfunc=4 != 3
                --- int vars: 8
                --- Gap: 0
                --- Obj Func: 4
                --- MIP?: true
                --- data: 
nNurses = 4;
minHours = 1;
maxHours = 4;
maxConsec = 3;
maxPresence = 6;
hours = 24;
demand = [2 1 0 0 4 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
desiredZ = [1 1 1 1];

                --- sol: 
// solution (optimal) with objective 4
// Quality Incumbent solution:
// MILP objective                                 4,0000000000e+00
// MILP solution norm |x| (Total, Max)            4,80000e+01  6,00000e+00
// MILP solution error (Ax=b) (Total, Max)        3,19744e-14  1,42109e-14
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          8,88178e-16  2,22045e-16
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1 1 1];
w = [[1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]
             [0 1 1 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [6 6 6 6];
s = [1 1 1 1];

FAIL/SUCCESS    ------------------- ERROR: test_basicTest-manual-solution02.dat objfunc=UNSOLVED != 4
                --- data: 
nNurses = 4;
minHours = 1;
maxHours = 4;
maxConsec = 3;
maxPresence = 5;
hours = 24;
demand = [2 1 0 0 4 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0];
desiredZ = [4 0 0 0];

SUCCESS/SUCCESS ---------------------- ok: test_basicTest-manual-solution03.dat time: 0.033628 int vars: 10
                --- int vars: 10
                --- Gap: 0
                --- Obj Func: 5
                --- MIP?: true
                --- data: 
nNurses = 5;
minHours = 1;
maxHours = 10;
maxConsec = 4;
maxPresence = 12;
hours = 24;
demand = [1 1 1 2 1 2 2 3 2 2 2 2 2 3 3 2 2 2 2 1 2 1 1 1];
desiredZ = [1 1 1 1 1];

                --- sol: 
// solution (optimal) with objective 5
// Quality Incumbent solution:
// MILP objective                                 5,0000000000e+00
// MILP solution norm |x| (Total, Max)            1,70000e+02  2,40000e+01
// MILP solution error (Ax=b) (Total, Max)        0,00000e+00  0,00000e+00
// MILP x bound error (Total, Max)                0,00000e+00  0,00000e+00
// MILP x integrality error (Total, Max)          0,00000e+00  0,00000e+00
// MILP slack bound error (Total, Max)            0,00000e+00  0,00000e+00
// 

z = [1
         1 1 1 1];
w = [[0 0 1 1 0 1 0 1 1 0 1 0 1 1 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 1 1 1 0 1 0 1 1 0 1 1 1 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 1 0 1 0 1 1 1 0 1 1 1 1 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 0 1 1 1 0 1 1 1 1]
             [1 1 0 1 1 0 1 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0]];
e = [14 17 21 24 12];
s = [3 6 10 14 1];

